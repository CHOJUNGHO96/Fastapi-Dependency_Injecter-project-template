versions pytest-7.4.1, python-3.11.1.final.0
cwd=D:\workspace\base\cjh_base_fastapi\app\test
args=('--debug',)

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001DC6CA88190>
    pytest_plugin_registered [hook]
        plugin: <Session test exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001DC6CA88190>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001DC1A04BD50>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001DC1A38A9D0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001DC6CA88190>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_trio.plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_trio\\plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001DC6CB3E410>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=12 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001DC6F258C10>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=8 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'app.test.conftest' from 'D:\\workspace\\base\\cjh_base_fastapi\\app\\test\\conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001DC1A04BD50>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001DC1A38A9D0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : MovedIn20Warning('The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0)'), category : 'MovedIn20Warning', filename : 'D:\\workspace\\base\\cjh_base_fastapi\\app\\database\\schema\\base.py', lineno : 4, line : None}
          nodeid: 
          when: config
          location: None
      finish pytest_warning_recorded --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001DC1A38AF90>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001DC1A38AE90>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001DC6CA88190>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_asyncio\\plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_trio.plugin' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_trio\\plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=10 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001DC6CB3E410>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=12 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001DC6F258C10>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=8 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'app.test.conftest' from 'D:\\workspace\\base\\cjh_base_fastapi\\app\\test\\conftest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001DC1A04BD50>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001DC1A38A9D0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001DC1A38AF90>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001DC1A38AE90>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001DC1A3B9C50>
          manager: <_pytest.config.PytestPluginManager object at 0x000001DC6BCB9550>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001DC6CA88190>
          start_path: D:\workspace\base\cjh_base_fastapi\app\test
          startdir: D:\workspace\base\cjh_base_fastapi\app\test
      finish pytest_report_header --> [['asyncio: mode=Mode.STRICT'], ['rootdir: D:\\workspace\\base\\cjh_base_fastapi\\app\\test', 'configfile: pytest.ini', 'plugins: anyio-3.7.1, asyncio-0.21.1, trio-0.8.0'], ['using: pytest-7.4.1', 'setuptools registered plugins:', '  anyio-3.7.1 at D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\anyio\\pytest_plugin.py', '  pytest-asyncio-0.21.1 at D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_asyncio\\plugin.py', '  pytest-trio-0.8.0 at D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest_trio\\plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['D:\\workspace\\base\\cjh_base_fastapi\\app\\test'] [collection]
        pytest_collectstart [hook]
            collector: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (WindowsPath('D:/workspace/base/cjh_base_fastapi/app/test'), []) [collection]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x000001DC6CA88190>
                collection_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                  path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
              finish pytest_pycollect_makemodule --> <Package test> [hook]
            finish pytest_collect_file --> [<Package test>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x000001DC6CA88190>
                collection_path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
                  path: D:\workspace\base\cjh_base_fastapi\app\__init__.py
              finish pytest_pycollect_makemodule --> <Package app> [hook]
            finish pytest_collect_file --> [<Package app>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x000001DC6CA88190>
                collection_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
            finish pytest_ignore_collect --> None [hook]
            pytest_collect_file [hook]
                parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
                  path: D:\workspace\base\cjh_base_fastapi\app\test\__init__.py
              finish pytest_pycollect_makemodule --> <Package test> [hook]
            finish pytest_collect_file --> [<Package test>] [hook]
            pytest_ignore_collect [hook]
                config: <_pytest.config.Config object at 0x000001DC6CA88190>
                collection_path: D:\workspace\base\cjh_base_fastapi\app\test\.pytest_cache
                path: D:\workspace\base\cjh_base_fastapi\app\test\.pytest_cache
            finish pytest_ignore_collect --> True [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package test> [collection]
      pytest_collectstart [hook]
          collector: <Package test>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package test>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\conftest.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\conftest.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\pytest.ini
            path: D:\workspace\base\cjh_base_fastapi\app\test\pytest.ini
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\pytest.ini
            path: D:\workspace\base\cjh_base_fastapi\app\test\pytest.ini
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\pytestdebug.log
            path: D:\workspace\base\cjh_base_fastapi\app\test\pytestdebug.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\pytestdebug.log
            path: D:\workspace\base\cjh_base_fastapi\app\test\pytestdebug.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\test.db
            path: D:\workspace\base\cjh_base_fastapi\app\test\test.db
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\test.db
            path: D:\workspace\base\cjh_base_fastapi\app\test\test.db
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
          pytest_pycollect_makemodule [hook]
              parent: <Package test>
              module_path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
              path: D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py
          finish pytest_pycollect_makemodule --> <Module test_auth.py> [hook]
        finish pytest_collect_file --> [<Module test_auth.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test>
            file_path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
            path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
          pytest_pycollect_makemodule [hook]
              parent: <Package test>
              module_path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
              path: D:\workspace\base\cjh_base_fastapi\app\test\test_product.py
          finish pytest_pycollect_makemodule --> <Module test_product.py> [hook]
        finish pytest_collect_file --> [<Module test_product.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            collection_path: D:\workspace\base\cjh_base_fastapi\app\test\.pytest_cache
            path: D:\workspace\base\cjh_base_fastapi\app\test\.pytest_cache
        finish pytest_ignore_collect --> True [hook]
      finish pytest_make_collect_report --> <CollectReport '__init__.py' lenresult=2 outcome='passed'> [hook]
    genitems <Module test_auth.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_auth.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_auth.py>
      find_module called for: app.test.test_auth [assertion]
      matched test file 'D:\\workspace\\base\\cjh_base_fastapi\\app\\test\\test_auth.py' [assertion]
      found cached rewritten pyc for D:\workspace\base\cjh_base_fastapi\app\test\test_auth.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: pytest
            obj: <module 'pytest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_registration
            obj: <function test_registration at 0x000001DC1A3B7C40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001DC1A3C3FD0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_registration>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_login
            obj: <function test_login at 0x000001DC1A3B7CE0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001DC1A36A950>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_login>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_auth.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_registration> [collection]
      pytest_itemcollected [hook]
          item: <Function test_registration>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_login> [collection]
      pytest_itemcollected [hook]
          item: <Function test_login>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_auth.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_product.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_product.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_product.py>
      find_module called for: app.test.test_product [assertion]
      matched test file 'D:\\workspace\\base\\cjh_base_fastapi\\app\\test\\test_product.py' [assertion]
      _read_pyc(D:\workspace\base\cjh_base_fastapi\app\test\test_product.py): out of date [assertion]
      rewriting WindowsPath('D:/workspace/base/cjh_base_fastapi/app/test/test_product.py') [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_product.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_product.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_product.py>
            name: pytest
            obj: <module 'pytest' from 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\pytest\\__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_product.py>
            name: test_post_products
            obj: <function test_post_products at 0x000001DC1A3E02C0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001DC1A3BB150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_post_products>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_product.py>
            name: test_get_products
            obj: <function test_get_products at 0x000001DC1A3E0360>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001DC1A3C1810>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_get_products>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_product.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function test_post_products> [collection]
      pytest_itemcollected [hook]
          item: <Function test_post_products>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_get_products> [collection]
      pytest_itemcollected [hook]
          item: <Function test_get_products>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_product.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport '__init__.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001DC6CA88190>
          items: [<Function test_registration>, <Function test_login>, <Function test_post_products>, <Function test_get_products>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
            items: [<Function test_registration>, <Function test_login>, <Function test_post_products>, <Function test_get_products>]
            start_path: D:\workspace\base\cjh_base_fastapi\app\test
            startdir: D:\workspace\base\cjh_base_fastapi\app\test
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
      pytest_warning_recorded [hook]
          warning_message: {message : PytestConfigWarning('Unknown config option: python_paths\n'), category : 'PytestConfigWarning', filename : 'D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\config\\__init__.py', lineno : 1376, line : None}
          when: config
          nodeid: 
          location: ('D:\\workspace\\base\\cjh_base_fastapi\\venv\\Lib\\site-packages\\_pytest\\config\\__init__.py', 1376, '_validate_config_options')
      finish pytest_warning_recorded --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session test exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=4>
      pytest_runtest_protocol [hook]
          item: <Function test_registration>
          nextitem: <Function test_login>
        pytest_runtest_logstart [hook]
            nodeid: test_auth.py::test_registration
            location: ('test_auth.py', 3, 'test_registration')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_registration>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_registration>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='app' scope='session' baseid=''>
              request: <SubRequest 'app' for <Function test_registration>>
          early skip of rewriting module: sqlalchemy.dialects.sqlite [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.aiosqlite [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.base [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.json [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlite [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.pysqlcipher [assertion]
          early skip of rewriting module: sqlalchemy.dialects.sqlite.dml [assertion]
          early skip of rewriting module: sqlite3 [assertion]
          early skip of rewriting module: sqlite3.dbapi2 [assertion]
          early skip of rewriting module: _sqlite3 [assertion]
        pytest_runtest_makereport [hook]
            item: <Function test_registration>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=47>>
        finish pytest_runtest_makereport --> <TestReport 'test_auth.py::test_registration' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_auth.py::test_registration' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_auth.py::test_registration' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_registration>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=47>>
            report: <TestReport 'test_auth.py::test_registration' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_registration>
            nextitem: <Function test_login>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_registration>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_registration>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_auth.py::test_registration' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_auth.py::test_registration' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_auth.py::test_registration' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_auth.py::test_registration
            location: ('test_auth.py', 3, 'test_registration')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_login>
          nextitem: <Function test_post_products>
        pytest_runtest_logstart [hook]
            nodeid: test_auth.py::test_login
            location: ('test_auth.py', 15, 'test_login')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_login>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_login>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
        finish pytest_runtest_makereport --> <TestReport 'test_auth.py::test_login' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_auth.py::test_login' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_auth.py::test_login' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_login>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
            report: <TestReport 'test_auth.py::test_login' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_login>
            nextitem: <Function test_post_products>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_login>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_login>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_auth.py::test_login' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_auth.py::test_login' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_auth.py::test_login' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_auth.py::test_login
            location: ('test_auth.py', 15, 'test_login')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_post_products>
          nextitem: <Function test_get_products>
        pytest_runtest_logstart [hook]
            nodeid: test_product.py::test_post_products
            location: ('test_product.py', 3, 'test_post_products')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_post_products>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_post_products>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_products>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
        finish pytest_runtest_makereport --> <TestReport 'test_product.py::test_post_products' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_product.py::test_post_products' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_product.py::test_post_products' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_post_products>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
            report: <TestReport 'test_product.py::test_post_products' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_post_products>
            nextitem: <Function test_get_products>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_post_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_post_products>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_product.py::test_post_products' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_product.py::test_post_products' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_product.py::test_post_products' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_product.py::test_post_products
            location: ('test_product.py', 3, 'test_post_products')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_get_products>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test_product.py::test_get_products
            location: ('test_product.py', 17, 'test_get_products')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_get_products>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_get_products>>
          finish pytest_fixture_setup --> <ProactorEventLoop running=False closed=False debug=False> [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_products>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
        finish pytest_runtest_makereport --> <TestReport 'test_product.py::test_get_products' when='setup' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_product.py::test_get_products' when='setup' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_product.py::test_get_products' when='setup' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_get_products>
            call: <CallInfo when='setup' excinfo=<ExceptionInfo OperationalError('(sqlite3.OperationalError) no such table: global_config') tblen=38>>
            report: <TestReport 'test_product.py::test_get_products' when='setup' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_get_products>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop' scope='function' baseid=''>
              request: <SubRequest 'event_loop' for <Function test_get_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid=''>
              request: <SubRequest 'client' for <Function test_get_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='session' baseid=''>
              request: <SubRequest 'app' for <Function test_get_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid=''>
              request: <SubRequest 'client' for <Function test_post_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='session' baseid=''>
              request: <SubRequest 'app' for <Function test_post_products>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid=''>
              request: <SubRequest 'client' for <Function test_login>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='session' baseid=''>
              request: <SubRequest 'app' for <Function test_login>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='client' scope='session' baseid=''>
              request: <SubRequest 'client' for <Function test_registration>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='app' scope='session' baseid=''>
              request: <SubRequest 'app' for <Function test_registration>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_get_products>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_product.py::test_get_products' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_product.py::test_get_products' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_product.py::test_get_products' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001DC6CA88190>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_product.py::test_get_products
            location: ('test_product.py', 17, 'test_get_products')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session test exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=4 testscollected=4>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001DC1A38AF90>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x000001DC6CA88190>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_auth.py::test_registration' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_auth.py::test_login' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_product.py::test_post_products' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_product.py::test_get_products' when='setup' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001DC6CA88190>
        finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001DC6CA88190>
    finish pytest_unconfigure --> [] [hook]
